{"version":3,"sources":["components/AddItem.jsx","components/Todos.jsx","components/Items.jsx","useTodos.js","components/App.jsx","index.jsx"],"names":["AddItem","insert","setDiscard","prio","useRef","add","e","current","Number","target","dataset","className","onSubmit","preventDefault","em","elements","namedItem","name","value","required","placeholder","autoComplete","autoFocus","map","n","type","key","data-prio","onClick","stopPropagation","extract","extractor","arr","i","this","length","val","push","Todos","pairs","todos","toggle","remove","discard","completed","sel","call","item","index","complete","mode","half","Object","keys","filter","join","onMouseDown","tagName","id","data-index","Items","props","useTodos","counter","useState","setTodos","useMemo","items","update","$push","sort","i1","i2","a","toUpperCase","b","$splice","$apply","App","date","Date","getFullYear","getMonth","getDate","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7cebcc9f.chunk.js","sourcesContent":["import React, { useRef } from 'react';\nimport './AddItem.scss';\n\nconst AddItem = ({ insert, setDiscard }) => {\n  const prio = useRef(3),\n\n    discard = e => {\n      e.stopPropagation();\n      setDiscard(true);\n    },\n\n    // Submit-button onclick-handler, called before form submit-handler\n\n    add = e => {\n      prio.current = Number(e.target.dataset.prio);\n    },\n\n    // Form submit handler\n\n    submit = e => {\n      e.preventDefault();\n      const em = e.target.elements.namedItem('todo');\n\n      insert({ \n        name: em.value,\n        prio: prio.current\n      });\n\n      em.value = \"\";\n    };\n\n  return (\n    <form className=\"create\" onSubmit={submit}>\n      <input \n        className=\"todo-input\" \n        required\n        name=\"todo\"\n        placeholder=\"New todo\"\n        autoComplete=\"off\"\n        autoFocus={true} />\n      {\n        [3, 2, 1].map(n => \n          <button \n            className={'btn prio-' + n} \n            type=\"submit\"\n            key={n}\n            data-prio={n}\n            onClick={add} >\n          </button>\n        )\n      }\n      <button \n        className=\"btn close\"\n        type=\"button\"\n        onClick={discard} >\n        <span>\n          &times;\n        </span>\n      </button>\n    </form>\n  );\n};\n\nexport default AddItem;\n","import React from 'react';\nimport './Todos.scss';\n\n// Extract and mutate items\n\nfunction extract(extractor) {\n  const arr = [];\n\n  for (let i = 0; i < this.length; i++) {\n    const val = extractor(this[i], i, this);\n    if (val) arr.push(val);\n  }\n  return arr;\n}\n\n// Convert CSS class object to string\n\nconst className = pairs =>\n  Object.keys(pairs)\n    .filter(key => pairs[key])\n    .join(' ');\n;\n\nconst Todos = ({ todos, toggle, remove, discard, completed = false }) => {\n\n  const mouseDown = e => {\n    if (e.target.tagName !== 'LI') return;\n    const index = Number(e.target.dataset.index);\n    discard ? remove(index) : toggle(index);\n  },\n\n    // Filter out complete/incomplete todos and preserve each item's referential index.\n    sel = extract.call(todos, (item, index) =>\n      (!item.complete ^ completed) \n      && { ...item, index }\n    ),\n\n    // CSS class object\n\n    mode = {\n      half: true,\n      discard: discard && sel.length,\n      completed\n    };\n\n  return (\n    <div className={className(mode)}>\n      <h2>{completed ? 'Done' : 'To do'}</h2>\n      <ul \n        className=\"items\" \n        onMouseDown={mouseDown}>\n        {\n          sel.map(e => \n            <li \n              className={'prio-' + e.prio + ' item'}\n              key={e.id}\n              data-index={e.index} \n              type=\"button\" >\n              {e.name}\n            </li>\n          )\n        }\n      </ul>\n    </div>\n  );\n};\n\nexport default Todos;","import React from 'react';\nimport Todos from './Todos.jsx';\nimport './Items.scss';\n\nconst Items = props => {\n  return (\n    <section className=\"split\">\n      <Todos {...props} />\n      <Todos {...props} completed />\n    </section>\n  )\n};\n\nexport default Items;\n","import { useState, useMemo, useRef } from 'react';\nimport update from 'immutability-helper';\n\n// Hook to operate on Todos with insert(), remove() and toggle().\n\nconst useTodos = () => {\n  const counter = useRef(0),\n    [todos, setTodos] = useState([]),\n    { insert, remove, toggle } = useMemo(() => ({\n\n      insert: ({ name, prio }) => {\n        setTodos(items =>\n          update(items, {\n            $push: [{\n              name, prio, \n              id: counter.current++,\n              completed: false,\n            }]\n          })\n          .sort((i1, i2) => {\n            const a = i1.name.toUpperCase(),\n              b = i2.name.toUpperCase();\n            if (a === b) return 0;\n            return a < b ? -1 : 1;\n          })\n        );\n      },\n\n      remove: index => {\n        setTodos(items =>\n          update(items,\n            { $splice: [[index, 1]] }\n          )\n        );\n      },\n\n      toggle: index => {\n        setTodos(items =>\n          update(items, {\n            [index]: {\n              complete: {\n                $apply: val => !val\n              }\n            }\n          })\n        );\n      }\n\n    }), [setTodos]);\n\n  return { todos, insert, remove, toggle };\n};\n\nexport default useTodos;","import React, { useState } from 'react';\nimport AddItem from './AddItem.jsx';\nimport Items from './Items.jsx';\nimport useTodos from '../useTodos';\nimport './App.scss';\n\nfunction date() {\n  const date = new Date();\n  return `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()}`;\n}\n\nconst App = () => {\n  const [discard, setDiscard] = useState(),\n    { todos, insert, remove, toggle } = useTodos(),\n    cancel = () => setDiscard(false);\n  \n  return (\n    <div className=\"wrapper\" onClick={cancel}>\n      <header>\n        <h1>\n          {date()}\n        </h1>\n      </header>\n      <main>\n        <AddItem {...{ insert, setDiscard }} />\n        <Items {...{ todos, toggle, remove, discard }} />\n      </main>\n      <footer></footer>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App.jsx';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}